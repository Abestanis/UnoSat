/** Functionality to parse incoming messages. */
// *** AUTOGENERATED FILE - Do not edit manually! - Changes will be overwritten! *** //

#pragma once

#include <stddef.h>
#include "generated/rtk/units.h"
#include "generated/rtk/sharedTypes.h"
#include "generated/bufferAccessor.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef enum {
    INVALID_MESSAGE,
    CHECKSUM_ERROR,
    DYNAMIC_SIZE_TOO_LARGE,
} ParserError;


typedef struct MessageHandler {

    /**
     * Handle a GPS message.
     * 
     * @param handler The message handler.
     * @param latitude The current latitude of the system.
     * @param longitude The current longitude of the system.
     * @param attitude The current attitude of the system.
     * @param visibleSatellites The number of visible satellites.
     */
    void (* handleMessageGps)(struct MessageHandler* handler, deg_t latitude, deg_t longitude, mm_t attitude, uint8_t visibleSatellites);

    /**
     * Handle a LOG message.
     * 
     * @param handler The message handler.
     * @param size The size of the message in bytes.
     * @param message The message text.
     */
    void (* handleMessageLog)(struct MessageHandler* handler, uint16_t size, const char* message);

    void (* errorHandler)(struct MessageHandler* handler, ParserError error);

    void* data;
} MessageHandler;


/**
 * Parse and handle a received message.
 *
 * @param buffer An accessor to a buffer to parse a message from.
 * @param handler An handler for parsed messages.
 * @return Whether the message was parsed and handled.
 */
extern bool parseMessage(BufferAccessor* buffer, MessageHandler* handler);

#ifdef __cplusplus
}
#endif
